name: Cypress Tests

on: [push]

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          build: npm run build
          start: npm start

  # build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: docker build
      run: |
        prNumber="$(cut -d'/' -f3 <<<${{ github.ref }})"
        docker build -f ci.Dockerfile -t ${{ secrets.ACR_URL }}/sepes-web:pr-$prNumber .
        docker push ${{ secrets.ACR_URL }}/sepes-web:pr-$prNumber
  # ci:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'Do not run tests') == false 
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_DEV_CREDENTIALS }}

      - name: Retrieve token
        id: id-token
        run: |
          TOKEN=`pwsh ./.github/scripts/GetAccessToken.ps1 ${{ secrets.MOCK_USER_CLIENT_ID }} ${{ secrets.AZURE_TENANT_ID }} ${{ secrets.MOCK_USER_SECRET }} ${{ secrets.MOCK_USER_SCOPE }}`
          echo "::set-output name=TOKEN::$TOKEN"

      - run: npm ci

      # Only used for documentation videos 
      - name: npm install, build, and test
        if: ${{ github.event_name != 'pull_request' }}
        run: npm start & npx wait-on http://localhost:3000
        env:
          REACT_APP_SEPES_CLIENTID: ${{ secrets.DEV_AZURE_CREDENTIALS_CLIENT_ID }}
          REACT_APP_SEPES_AUTHORITY: ${{ secrets.REACT_APP_SEPES_AUTHORITY }}
          REACT_APP_INSTRUMENTATION_KEY: ${{ secrets.REACT_APP_INSTRUMENTATION_KEY }}
          REACT_APP_SEPES_BASIC_SCOPE: ${{ secrets.REACT_APP_SEPES_BASIC_SCOPE }}
          REACT_APP_SEPES_API_URL: "http://localhost:44371/"

      - name: Run documentation cypress tests
        if: ${{ github.event_name != 'pull_request' }}
        env:
          token: ${{ steps.id-token.outputs.TOKEN }}
        run: npx cypress run --config-file "cypress.docs.json" --spec "cypress/integration/documentationVideos/*" 
      
      # Sets up ffmpeg that is used for cutting off the first couple of seconds from the documentation video made from cypress
      - uses: FedericoCarboni/setup-ffmpeg@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        id: setup-ffmpeg
      
      # Cut the firste couple of seconds of the documentation video
      - run: ffmpeg -i cypress/videos/documentationVideos/createStudy.spec.js.mp4 -ss 3 -vcodec copy -acodec copy cypress/videos/documentationVideos/createStudy-cut.spec.js.mp4
        if: ${{ github.event_name != 'pull_request' }}

      - run: ffmpeg -i cypress/videos/documentationVideos/createDataset.spec.js.mp4 -ss 3 -vcodec copy -acodec copy cypress/videos/documentationVideos/createDataset-cut.spec.js.mp4
        if: ${{ github.event_name != 'pull_request' }}

      - run: ffmpeg -i cypress/videos/documentationVideos/createSandboxAndVirtualMachine.spec.js.mp4 -ss 3 -vcodec copy -acodec copy cypress/videos/documentationVideos/createSandboxAndVirtualMachine-cut.spec.spec.js.mp4
        if: ${{ github.event_name != 'pull_request' }}

      - name: Save documentation video
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v1
        with:
          name: documentation-videos
          path: cypress/videos/documentationVideos

      - uses: LanceMcCarthy/Action-AzureBlobUpload@v1.9.0
        if: ${{ github.event_name != 'pull_request' }}
        name: Azure Blob Upload with Destination folder defined
        with:
          connection_string: ${{ secrets.VIDEO_DOC_BLOB_KEY }}
          container_name: videos
          source_folder: cypress/videos/documentationVideos

      - name: Run quick running cypress tests
        env:
          token: ${{ steps.id-token.outputs.TOKEN }}
        run: | 
          npm start 
          cypress run --spec "cypress/integration/quickRunningTests/**/*" --env cyAccessToken=${{env.token}}

      - name: Run long running cypress tests  
        env:
          token: ${{ steps.id-token.outputs.TOKEN }}
        run: | 
          npm start
          cypress run --spec "cypress/integration/longRunningTests/**/*" --env cyAccessToken=$token
        if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'Run all tests') }}

      - name: Save screenshots if failure
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Save videos if failure
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
